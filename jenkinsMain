pipeline {
  agent { label 'agent' }

  environment {
    NODE_ENV = 'development'
    JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-17.0.14.0.7-2.el9.x86_64'
    ANDROID_HOME = '/opt/android-sdk'
    PATH = "${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${env.PATH}"
  }

  tools {
    nodejs 'jsnode' // Must match Jenkins global tool name
  }

  stages {
    stage('Checkout Code') {
      steps {
        git branch: 'main', url: 'https://github.com/rohanPSI-1122/Food-Delivery-App.git', credentialsId: 'rohanPSI-1122'
      }
    }

    stage('Install Dependencies') {
      steps {
        sh 'npm install'
      }
    }

    stage('Lint') {
      steps {
        script {
          try {
            sh 'npx eslint .'
          } catch (Exception e) {
            echo "⚠️ Linting failed or ESLint not installed. Continuing..."
          }
        }
      }
    }

stage('Test') {
      steps {
        script {
          try {
            sh 'npm test'
          } catch (Exception e) {
            echo "⚠️ Tests failed or not defined. Continuing..."
          }
        }
      }
    }

    stage('Bundle & Build APK') {
      steps {
        script {
          sh 'chmod +x android/gradlew'
          sh 'mkdir -p android/app/src/main/assets'
          sh '''
            npx react-native bundle \
              --platform android \
              --dev false \
              --entry-file index.android.js \
              --bundle-output android/app/src/main/assets/index.android.bundle \
              --assets-dest android/app/src/main/res
          '''
          sh 'cd android && ./gradlew :app:assembleDebug'
        }
      }
    }

    stage('Archive APK') {
      steps {
        archiveArtifacts artifacts: 'android/app/build/outputs/apk/debug/*.apk', fingerprint: true
      }
    }
  }

  post {
    success {
      echo "✅ Build completed successfully!"
    }
    failure {
      echo "❌ Build failed."
    }
  }
}
